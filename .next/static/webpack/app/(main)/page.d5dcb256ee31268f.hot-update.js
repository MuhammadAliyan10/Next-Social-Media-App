"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(main)/page",{

/***/ "(app-pages-browser)/./src/app/(main)/ForYouFeed.tsx":
/*!***************************************!*\
  !*** ./src/app/(main)/ForYouFeed.tsx ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ForYouFeed)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_InfiniteScrollContainer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/InfiniteScrollContainer */ \"(app-pages-browser)/./src/components/InfiniteScrollContainer.tsx\");\n/* harmony import */ var _components_posts_Post__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/posts/Post */ \"(app-pages-browser)/./src/components/posts/Post.tsx\");\n/* harmony import */ var _lib_Ky__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/Ky */ \"(app-pages-browser)/./src/lib/Ky.ts\");\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js\");\n/* harmony import */ var _barrel_optimize_names_Loader2_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Loader2!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/loader-circle.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nfunction ForYouFeed() {\n    _s();\n    const { data, fetchNextPage, hasNextPage, isFetching, isFetchingNextPage, status } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.useInfiniteQuery)({\n        queryKey: [\n            \"post-feed\",\n            \"for-you\"\n        ],\n        queryFn: (param)=>{\n            let { pageParam } = param;\n            return _lib_Ky__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(\"/api/posts/for-you\", pageParam ? {\n                searchParams: {\n                    cursor: pageParam\n                }\n            } : {}).json();\n        },\n        initialPageParam: null,\n        getNextPageParam: (lastPage)=>lastPage.nextCursor\n    });\n    const posts = (data === null || data === void 0 ? void 0 : data.pages.flatMap((page)=>page.posts)) || [];\n    if (status === \"pending\") {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Loader2_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n            className: \"mx-auto animate-spin\"\n        }, void 0, false, {\n            fileName: \"/Users/muhammadaliyan/Documents/Programming/Programming/TypeScript/Next-Social-Media-App/src/app/(main)/ForYouFeed.tsx\",\n            lineNumber: 34,\n            columnNumber: 12\n        }, this);\n    }\n    if (status === \"error\") {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: \"text-center text-destructive\",\n            children: \"An error occur\"\n        }, void 0, false, {\n            fileName: \"/Users/muhammadaliyan/Documents/Programming/Programming/TypeScript/Next-Social-Media-App/src/app/(main)/ForYouFeed.tsx\",\n            lineNumber: 37,\n            columnNumber: 12\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_InfiniteScrollContainer__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        className: \"space-y-5\",\n        onBottomReached: ()=>hasNextPage && !isFetching && fetchNextPage,\n        children: posts.map((post)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_posts_Post__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                post: post\n            }, post.id, false, {\n                fileName: \"/Users/muhammadaliyan/Documents/Programming/Programming/TypeScript/Next-Social-Media-App/src/app/(main)/ForYouFeed.tsx\",\n                lineNumber: 45,\n                columnNumber: 9\n            }, this))\n    }, void 0, false, {\n        fileName: \"/Users/muhammadaliyan/Documents/Programming/Programming/TypeScript/Next-Social-Media-App/src/app/(main)/ForYouFeed.tsx\",\n        lineNumber: 40,\n        columnNumber: 5\n    }, this);\n}\n_s(ForYouFeed, \"s/PnJ9PceaAbLSdKiuz+2vnWklM=\", false, function() {\n    return [\n        _tanstack_react_query__WEBPACK_IMPORTED_MODULE_4__.useInfiniteQuery\n    ];\n});\n_c = ForYouFeed;\nvar _c;\n$RefreshReg$(_c, \"ForYouFeed\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvKG1haW4pL0ZvcllvdUZlZWQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUUyRTtBQUNoQztBQUVUO0FBRWlDO0FBQzVCO0FBRXhCLFNBQVNLOztJQUN0QixNQUFNLEVBQ0pDLElBQUksRUFDSkMsYUFBYSxFQUNiQyxXQUFXLEVBQ1hDLFVBQVUsRUFDVkMsa0JBQWtCLEVBQ2xCQyxNQUFNLEVBQ1AsR0FBR1IsdUVBQWdCQSxDQUFDO1FBQ25CUyxVQUFVO1lBQUM7WUFBYTtTQUFVO1FBQ2xDQyxTQUFTO2dCQUFDLEVBQUVDLFNBQVMsRUFBRTttQkFDckJaLCtDQUFVQSxDQUNQYSxHQUFHLENBQ0Ysc0JBQ0FELFlBQVk7Z0JBQUVFLGNBQWM7b0JBQUVDLFFBQVFIO2dCQUFVO1lBQUUsSUFBSSxDQUFDLEdBRXhESSxJQUFJOztRQUNUQyxrQkFBa0I7UUFDbEJDLGtCQUFrQixDQUFDQyxXQUFhQSxTQUFTQyxVQUFVO0lBQ3JEO0lBRUEsTUFBTUMsUUFBUWpCLENBQUFBLGlCQUFBQSwyQkFBQUEsS0FBTWtCLEtBQUssQ0FBQ0MsT0FBTyxDQUFDLENBQUNDLE9BQVNBLEtBQUtILEtBQUssTUFBSyxFQUFFO0lBQzdELElBQUlaLFdBQVcsV0FBVztRQUN4QixxQkFBTyw4REFBQ1AsbUZBQU9BO1lBQUN1QixXQUFVOzs7Ozs7SUFDNUI7SUFDQSxJQUFJaEIsV0FBVyxTQUFTO1FBQ3RCLHFCQUFPLDhEQUFDaUI7WUFBRUQsV0FBVTtzQkFBK0I7Ozs7OztJQUNyRDtJQUNBLHFCQUNFLDhEQUFDM0IsMkVBQXVCQTtRQUN0QjJCLFdBQVU7UUFDVkUsaUJBQWlCLElBQU1yQixlQUFlLENBQUNDLGNBQWNGO2tCQUVwRGdCLE1BQU1PLEdBQUcsQ0FBQyxDQUFDQyxxQkFDViw4REFBQzlCLDhEQUFJQTtnQkFBQzhCLE1BQU1BO2VBQVdBLEtBQUtDLEVBQUU7Ozs7Ozs7Ozs7QUFvQnRDO0dBdER3QjNCOztRQVFsQkYsbUVBQWdCQTs7O0tBUkVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvKG1haW4pL0ZvcllvdUZlZWQudHN4PzY3MzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBJbmZpbml0ZVNjcm9sbENvbnRhaW5lciBmcm9tIFwiQC9jb21wb25lbnRzL0luZmluaXRlU2Nyb2xsQ29udGFpbmVyXCI7XG5pbXBvcnQgUG9zdCBmcm9tIFwiQC9jb21wb25lbnRzL3Bvc3RzL1Bvc3RcIjtcbmltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCI7XG5pbXBvcnQga3lJbnN0YW5jZSBmcm9tIFwiQC9saWIvS3lcIjtcbmltcG9ydCB7IFBvc3REYXRhLCBQb3N0c1BhZ2UgfSBmcm9tIFwiQC9saWIvdHlwZXNcIjtcbmltcG9ydCB7IHVzZUluZmluaXRlUXVlcnksIHVzZVF1ZXJ5IH0gZnJvbSBcIkB0YW5zdGFjay9yZWFjdC1xdWVyeVwiO1xuaW1wb3J0IHsgTG9hZGVyMiB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gRm9yWW91RmVlZCgpIHtcbiAgY29uc3Qge1xuICAgIGRhdGEsXG4gICAgZmV0Y2hOZXh0UGFnZSxcbiAgICBoYXNOZXh0UGFnZSxcbiAgICBpc0ZldGNoaW5nLFxuICAgIGlzRmV0Y2hpbmdOZXh0UGFnZSxcbiAgICBzdGF0dXMsXG4gIH0gPSB1c2VJbmZpbml0ZVF1ZXJ5KHtcbiAgICBxdWVyeUtleTogW1wicG9zdC1mZWVkXCIsIFwiZm9yLXlvdVwiXSxcbiAgICBxdWVyeUZuOiAoeyBwYWdlUGFyYW0gfSkgPT5cbiAgICAgIGt5SW5zdGFuY2VcbiAgICAgICAgLmdldChcbiAgICAgICAgICBcIi9hcGkvcG9zdHMvZm9yLXlvdVwiLFxuICAgICAgICAgIHBhZ2VQYXJhbSA/IHsgc2VhcmNoUGFyYW1zOiB7IGN1cnNvcjogcGFnZVBhcmFtIH0gfSA6IHt9LFxuICAgICAgICApXG4gICAgICAgIC5qc29uPFBvc3RzUGFnZT4oKSxcbiAgICBpbml0aWFsUGFnZVBhcmFtOiBudWxsIGFzIHN0cmluZyB8IG51bGwsXG4gICAgZ2V0TmV4dFBhZ2VQYXJhbTogKGxhc3RQYWdlKSA9PiBsYXN0UGFnZS5uZXh0Q3Vyc29yLFxuICB9KTtcblxuICBjb25zdCBwb3N0cyA9IGRhdGE/LnBhZ2VzLmZsYXRNYXAoKHBhZ2UpID0+IHBhZ2UucG9zdHMpIHx8IFtdO1xuICBpZiAoc3RhdHVzID09PSBcInBlbmRpbmdcIikge1xuICAgIHJldHVybiA8TG9hZGVyMiBjbGFzc05hbWU9XCJteC1hdXRvIGFuaW1hdGUtc3BpblwiIC8+O1xuICB9XG4gIGlmIChzdGF0dXMgPT09IFwiZXJyb3JcIikge1xuICAgIHJldHVybiA8cCBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlciB0ZXh0LWRlc3RydWN0aXZlXCI+QW4gZXJyb3Igb2NjdXI8L3A+O1xuICB9XG4gIHJldHVybiAoXG4gICAgPEluZmluaXRlU2Nyb2xsQ29udGFpbmVyXG4gICAgICBjbGFzc05hbWU9XCJzcGFjZS15LTVcIlxuICAgICAgb25Cb3R0b21SZWFjaGVkPXsoKSA9PiBoYXNOZXh0UGFnZSAmJiAhaXNGZXRjaGluZyAmJiBmZXRjaE5leHRQYWdlfVxuICAgID5cbiAgICAgIHtwb3N0cy5tYXAoKHBvc3QpID0+IChcbiAgICAgICAgPFBvc3QgcG9zdD17cG9zdH0ga2V5PXtwb3N0LmlkfSAvPlxuICAgICAgKSl9XG4gICAgICB7LyogRmV0Y2ggdXNpbmcgYnV0dG9uICovfVxuICAgICAgey8qIHtpc0ZldGNoaW5nTmV4dFBhZ2UgPyAoXG4gICAgICAgIDxMb2FkZXIyIGNsYXNzTmFtZT1cIm14LWF1dG8gbXktMiBhbmltYXRlLXNwaW5cIiAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPD5cbiAgICAgICAgICB7aGFzTmV4dFBhZ2UgPyAoXG4gICAgICAgICAgICA8QnV0dG9uIG9uQ2xpY2s9eygpID0+IGZldGNoTmV4dFBhZ2UoKX0gZGlzYWJsZWQ9e2lzRmV0Y2hpbmd9PlxuICAgICAgICAgICAgICBMb2FkIE1vcmVcbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJteS00IHRleHQtY2VudGVyIHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPlxuICAgICAgICAgICAgICBZb3UgYWxsIGNhdWdodCB1cC4gRm9sbG93IG90aGVycyB0byBnZXQgbW9yZVxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICl9XG4gICAgICAgIDwvPlxuICAgICAgKX0gKi99XG4gICAgPC9JbmZpbml0ZVNjcm9sbENvbnRhaW5lcj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJJbmZpbml0ZVNjcm9sbENvbnRhaW5lciIsIlBvc3QiLCJreUluc3RhbmNlIiwidXNlSW5maW5pdGVRdWVyeSIsIkxvYWRlcjIiLCJGb3JZb3VGZWVkIiwiZGF0YSIsImZldGNoTmV4dFBhZ2UiLCJoYXNOZXh0UGFnZSIsImlzRmV0Y2hpbmciLCJpc0ZldGNoaW5nTmV4dFBhZ2UiLCJzdGF0dXMiLCJxdWVyeUtleSIsInF1ZXJ5Rm4iLCJwYWdlUGFyYW0iLCJnZXQiLCJzZWFyY2hQYXJhbXMiLCJjdXJzb3IiLCJqc29uIiwiaW5pdGlhbFBhZ2VQYXJhbSIsImdldE5leHRQYWdlUGFyYW0iLCJsYXN0UGFnZSIsIm5leHRDdXJzb3IiLCJwb3N0cyIsInBhZ2VzIiwiZmxhdE1hcCIsInBhZ2UiLCJjbGFzc05hbWUiLCJwIiwib25Cb3R0b21SZWFjaGVkIiwibWFwIiwicG9zdCIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/(main)/ForYouFeed.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/InfiniteScrollContainer.tsx":
/*!****************************************************!*\
  !*** ./src/components/InfiniteScrollContainer.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InfiniteScrollContainer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_intersection_observer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-intersection-observer */ \"(app-pages-browser)/./node_modules/react-intersection-observer/index.mjs\");\n\nvar _s = $RefreshSig$();\n\n\nfunction InfiniteScrollContainer(param) {\n    let { children, onBottomReached, className } = param;\n    _s();\n    const { ref } = (0,react_intersection_observer__WEBPACK_IMPORTED_MODULE_2__.useInView)({\n        onChange (inView) {\n            if (react_intersection_observer__WEBPACK_IMPORTED_MODULE_2__.InView) {\n                onBottomReached();\n            }\n        }\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: className,\n        children: [\n            children,\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: ref\n            }, void 0, false, {\n                fileName: \"/Users/muhammadaliyan/Documents/Programming/Programming/TypeScript/Next-Social-Media-App/src/components/InfiniteScrollContainer.tsx\",\n                lineNumber: 24,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/muhammadaliyan/Documents/Programming/Programming/TypeScript/Next-Social-Media-App/src/components/InfiniteScrollContainer.tsx\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, this);\n}\n_s(InfiniteScrollContainer, \"XITNdRVzVqEyHSypZVjZcr+BvT8=\", false, function() {\n    return [\n        react_intersection_observer__WEBPACK_IMPORTED_MODULE_2__.useInView\n    ];\n});\n_c = InfiniteScrollContainer;\nvar _c;\n$RefreshReg$(_c, \"InfiniteScrollContainer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0luZmluaXRlU2Nyb2xsQ29udGFpbmVyLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTBCO0FBQ3NDO0FBT2pELFNBQVNHLHdCQUF3QixLQUlqQjtRQUppQixFQUM5Q0MsUUFBUSxFQUNSQyxlQUFlLEVBQ2ZDLFNBQVMsRUFDb0IsR0FKaUI7O0lBSzlDLE1BQU0sRUFBRUMsR0FBRyxFQUFFLEdBQUdMLHNFQUFTQSxDQUFDO1FBQ3hCTSxVQUFTQyxNQUFNO1lBQ2IsSUFBSVIsK0RBQU1BLEVBQUU7Z0JBQ1ZJO1lBQ0Y7UUFDRjtJQUNGO0lBQ0EscUJBQ0UsOERBQUNLO1FBQUlKLFdBQVdBOztZQUNiRjswQkFDRCw4REFBQ007Z0JBQUlILEtBQUtBOzs7Ozs7Ozs7Ozs7QUFHaEI7R0FsQndCSjs7UUFLTkQsa0VBQVNBOzs7S0FMSEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvSW5maW5pdGVTY3JvbGxDb250YWluZXIudHN4PzRlZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgSW5WaWV3LCB1c2VJblZpZXcgfSBmcm9tIFwicmVhY3QtaW50ZXJzZWN0aW9uLW9ic2VydmVyXCI7XG5cbmludGVyZmFjZSBJbmZpbml0ZVNjcm9sbENvbnRhaW5lclByb3BzIGV4dGVuZHMgUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW4ge1xuICBvbkJvdHRvbVJlYWNoZWQ6ICgpID0+IHZvaWQ7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSW5maW5pdGVTY3JvbGxDb250YWluZXIoe1xuICBjaGlsZHJlbixcbiAgb25Cb3R0b21SZWFjaGVkLFxuICBjbGFzc05hbWUsXG59OiBJbmZpbml0ZVNjcm9sbENvbnRhaW5lclByb3BzKSB7XG4gIGNvbnN0IHsgcmVmIH0gPSB1c2VJblZpZXcoe1xuICAgIG9uQ2hhbmdlKGluVmlldykge1xuICAgICAgaWYgKEluVmlldykge1xuICAgICAgICBvbkJvdHRvbVJlYWNoZWQoKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDxkaXYgcmVmPXtyZWZ9IC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJJblZpZXciLCJ1c2VJblZpZXciLCJJbmZpbml0ZVNjcm9sbENvbnRhaW5lciIsImNoaWxkcmVuIiwib25Cb3R0b21SZWFjaGVkIiwiY2xhc3NOYW1lIiwicmVmIiwib25DaGFuZ2UiLCJpblZpZXciLCJkaXYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/InfiniteScrollContainer.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-intersection-observer/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/react-intersection-observer/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InView: () => (/* binding */ InView),\n/* harmony export */   defaultFallbackInView: () => (/* binding */ defaultFallbackInView),\n/* harmony export */   observe: () => (/* binding */ observe),\n/* harmony export */   useInView: () => (/* binding */ useInView)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* __next_internal_client_entry_do_not_use__ InView,defaultFallbackInView,observe,useInView auto */ var _s = $RefreshSig$();\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __publicField = (obj, key, value)=>{\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n};\n// src/InView.tsx\n\n// src/observe.ts\nvar observerMap = /* @__PURE__ */ new Map();\nvar RootIds = /* @__PURE__ */ new WeakMap();\nvar rootId = 0;\nvar unsupportedValue = void 0;\nfunction defaultFallbackInView(inView) {\n    unsupportedValue = inView;\n}\nfunction getRootId(root) {\n    if (!root) return \"0\";\n    if (RootIds.has(root)) return RootIds.get(root);\n    rootId += 1;\n    RootIds.set(root, rootId.toString());\n    return RootIds.get(root);\n}\nfunction optionsToId(options) {\n    return Object.keys(options).sort().filter((key)=>options[key] !== void 0).map((key)=>{\n        return \"\".concat(key, \"_\").concat(key === \"root\" ? getRootId(options.root) : options[key]);\n    }).toString();\n}\nfunction createObserver(options) {\n    const id = optionsToId(options);\n    let instance = observerMap.get(id);\n    if (!instance) {\n        const elements = /* @__PURE__ */ new Map();\n        let thresholds;\n        const observer = new IntersectionObserver((entries)=>{\n            entries.forEach((entry)=>{\n                var _a;\n                const inView = entry.isIntersecting && thresholds.some((threshold)=>entry.intersectionRatio >= threshold);\n                if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n                    entry.isVisible = inView;\n                }\n                (_a = elements.get(entry.target)) == null ? void 0 : _a.forEach((callback)=>{\n                    callback(inView, entry);\n                });\n            });\n        }, options);\n        thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [\n            options.threshold || 0\n        ]);\n        instance = {\n            id,\n            observer,\n            elements\n        };\n        observerMap.set(id, instance);\n    }\n    return instance;\n}\nfunction observe(element, callback) {\n    let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, fallbackInView = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : unsupportedValue;\n    if (typeof window.IntersectionObserver === \"undefined\" && fallbackInView !== void 0) {\n        const bounds = element.getBoundingClientRect();\n        callback(fallbackInView, {\n            isIntersecting: fallbackInView,\n            target: element,\n            intersectionRatio: typeof options.threshold === \"number\" ? options.threshold : 0,\n            time: 0,\n            boundingClientRect: bounds,\n            intersectionRect: bounds,\n            rootBounds: bounds\n        });\n        return ()=>{};\n    }\n    const { id, observer, elements } = createObserver(options);\n    const callbacks = elements.get(element) || [];\n    if (!elements.has(element)) {\n        elements.set(element, callbacks);\n    }\n    callbacks.push(callback);\n    observer.observe(element);\n    return function unobserve() {\n        callbacks.splice(callbacks.indexOf(callback), 1);\n        if (callbacks.length === 0) {\n            elements.delete(element);\n            observer.unobserve(element);\n        }\n        if (elements.size === 0) {\n            observer.disconnect();\n            observerMap.delete(id);\n        }\n    };\n}\n// src/InView.tsx\nfunction isPlainChildren(props) {\n    return typeof props.children !== \"function\";\n}\nvar InView = class extends react__WEBPACK_IMPORTED_MODULE_0__.Component {\n    componentDidMount() {\n        this.unobserve();\n        this.observeNode();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n            this.unobserve();\n            this.observeNode();\n        }\n    }\n    componentWillUnmount() {\n        this.unobserve();\n    }\n    observeNode() {\n        if (!this.node || this.props.skip) return;\n        const { threshold, root, rootMargin, trackVisibility, delay, fallbackInView } = this.props;\n        this._unobserveCb = observe(this.node, this.handleChange, {\n            threshold,\n            root,\n            rootMargin,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay\n        }, fallbackInView);\n    }\n    unobserve() {\n        if (this._unobserveCb) {\n            this._unobserveCb();\n            this._unobserveCb = null;\n        }\n    }\n    render() {\n        const { children } = this.props;\n        if (typeof children === \"function\") {\n            const { inView, entry } = this.state;\n            return children({\n                inView,\n                entry,\n                ref: this.handleNode\n            });\n        }\n        const { as, triggerOnce, threshold, root, rootMargin, onChange, skip, trackVisibility, delay, initialInView, fallbackInView, ...props } = this.props;\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(as || \"div\", {\n            ref: this.handleNode,\n            ...props\n        }, children);\n    }\n    constructor(props){\n        super(props);\n        __publicField(this, \"node\", null);\n        __publicField(this, \"_unobserveCb\", null);\n        __publicField(this, \"handleNode\", (node)=>{\n            if (this.node) {\n                this.unobserve();\n                if (!node && !this.props.triggerOnce && !this.props.skip) {\n                    this.setState({\n                        inView: !!this.props.initialInView,\n                        entry: void 0\n                    });\n                }\n            }\n            this.node = node ? node : null;\n            this.observeNode();\n        });\n        __publicField(this, \"handleChange\", (inView, entry)=>{\n            if (inView && this.props.triggerOnce) {\n                this.unobserve();\n            }\n            if (!isPlainChildren(this.props)) {\n                this.setState({\n                    inView,\n                    entry\n                });\n            }\n            if (this.props.onChange) {\n                this.props.onChange(inView, entry);\n            }\n        });\n        this.state = {\n            inView: !!props.initialInView,\n            entry: void 0\n        };\n    }\n};\n// src/useInView.tsx\n\nfunction useInView() {\n    let { threshold, delay, trackVisibility, rootMargin, root, triggerOnce, skip, initialInView, fallbackInView, onChange } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s();\n    var _a;\n    const [ref, setRef] = react__WEBPACK_IMPORTED_MODULE_0__.useState(null);\n    const callback = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        inView: !!initialInView,\n        entry: void 0\n    });\n    callback.current = onChange;\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (skip || !ref) return;\n        let unobserve;\n        unobserve = observe(ref, (inView, entry)=>{\n            setState({\n                inView,\n                entry\n            });\n            if (callback.current) callback.current(inView, entry);\n            if (entry.isIntersecting && triggerOnce && unobserve) {\n                unobserve();\n                unobserve = void 0;\n            }\n        }, {\n            root,\n            rootMargin,\n            threshold,\n            // @ts-ignore\n            trackVisibility,\n            // @ts-ignore\n            delay\n        }, fallbackInView);\n        return ()=>{\n            if (unobserve) {\n                unobserve();\n            }\n        };\n    }, // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        // If the threshold is an array, convert it to a string, so it won't change between renders.\n        Array.isArray(threshold) ? threshold.toString() : threshold,\n        ref,\n        root,\n        rootMargin,\n        triggerOnce,\n        skip,\n        trackVisibility,\n        fallbackInView,\n        delay\n    ]);\n    const entryTarget = (_a = state.entry) == null ? void 0 : _a.target;\n    const previousEntryTarget = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n    if (!ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget) {\n        previousEntryTarget.current = entryTarget;\n        setState({\n            inView: !!initialInView,\n            entry: void 0\n        });\n    }\n    const result = [\n        setRef,\n        state.inView,\n        state.entry\n    ];\n    result.ref = result[0];\n    result.inView = result[1];\n    result.entry = result[2];\n    return result;\n}\n_s(useInView, \"92PH8daNk2ii3BZlRnLjbd8AGuw=\");\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-intersection-observer/index.mjs\n"));

/***/ })

});